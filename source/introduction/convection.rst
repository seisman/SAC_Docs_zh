文档约定
========

约定这个事情，说起来容易做起来难，遇到不符合约定的地方只能靠读者自己领悟了。

语法约定
--------

#. 命令和选项使用大写字母，参数使用小写字母
#. 命令和选项均使用全称，简写形式可省略的部分用小写字母表示
#. “``[XXX]``”表示中括号内的 ``XXX`` 为可选项
#. “``A|B|C``”表示可以在A、B、C中任选一项

示例如下::

    BandPas BUtter|BEssel|C1|C2 Corners v1 v2 Npoles n Passes n Tranbw v Atten v

需要特别说明的是，命令语法中选项的简写形式是在保证不产生歧义下的前提下
所允许的\ **最简形式**\ 。本例中，\ ``CORNERS`` 的最简形式为首字符 ``C``\ ，
用户也可以使用 ``CO``\ 、\ ``COR`` 等来表示 ``CORNERS``\ 。

示例约定
--------

#. 命令、选项、参数均使用小写字母
#. 常见的命令和选项均使用简写表示
#. 含有提示符“``SAC>``”的行是用户键入的命令，无提示符的行是SAC输出行
#. SAC 输出行中可能会删除一些不重要的信息
#. 示例中加入注释以帮助用户理解，注释使用了行注释符号 ``#``
#. 命令长度过长时会被拆分成多行，每一行的行尾会加上续行符 ``\`` ，
   但需要注意，SAC 中不能使用续行符
#. 示例中若出现 ``...``\ ，表示省略了一堆对数据的处理流程
#. 除非上下文说明，否则每个例子都运行在单独的 SAC 会话中，即每个命令都
   省略了启动 SAC 和退出 SAC 的命令
#. 除特别情况外，均省略 :doc:`/commands/plot` 命令，用户应该学会随时 ``plot``
   以查看当前内存中的波形结果

示例如下：

.. code-block:: bash

    $ sac                           # 该行省略
    SAC> fg seis                    # 这是注释
    SAC> p                          # 该行省略
    SAC> lh o
         o = -4.143000e+01          # SAC输出行
    SAC> q                          # 该行省略
